<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jones.mars.repository.RolePermissionMapper" >
    <insert id="insert" parameterType="RolePermissionParam" useGeneratedKeys="true" keyProperty="id">
        <foreach collection="classIds" item="classId" index="index" separator=";">
            insert into role_permission(`role_id`, `class_id`, `operation`, `create_time`, `update_time`)
            values
            (#{roleId}, #{classId}, #{operation}, now(), now())
            ON DUPLICATE KEY UPDATE
            role_id = #{roleId}, class_id=#{classId}, operation=#{operation}, create_time=now(), update_time=now()
        </foreach>
    </insert>
    <select id="findOne" resultType="RolePermission">
        select * from role_permission where id = #{id}
    </select>
    <delete id="delete">
        delete from role_permission where id=#{id}
    </delete>
    <delete id="deleteByRoleId">
        delete from role_permission where role_id=#{roleId}
    </delete>
    <select id="findAll" resultType="RolePermission" parameterType="RolePermissionQuery">
        select * from role_permission rp left join user_role ur on rp.role_id=ur.role_id
        where 1=1
        <if test="classId != null">
            and rp.class_id=#{classId}
        </if>
        <if test="userId != null">
            and ur.user_id = #{userId}
        </if>
    </select>
    <select id="findGrantedUserByClassId" resultType="EnterpriseUser" parameterType="RolePermissionQuery">
        select distinct(ur.user_id) as userId, up.sgname as userSgname from user_role ur left join role_permission p on ur.role_id=p.role_id left join user_profile up on ur.user_id=up.user_id
        where p.operation = #{operation} and p.class_id=#{classId}
    </select>

    <select id="findGrantedUserInfoList" resultType="ProjectUser" parameterType="RolePermissionQuery">
        <include refid="com.jones.mars.repository.BaseMapper.startPage" />
        select distinct(ur.user_id) as userId, u.mobile, up.sgname, up.avatar, up.email,up.description, d.name as departmentName
        from user_role ur
        left join role_permission rp on ur.role_id=rp.role_id left join user_profile up on ur.user_id=up.user_id
        left join user u on u.id=ur.user_id
        left join department_user du on ur.user_id=du.user_id
        left join department d on du.department_id = d.id
        <if test="projectId != null">
          left join project p on p.class_id=rp.class_id
        </if>
        where rp.operation = #{operation}
        <if test="projectId != null">
            and p.id=#{projectId}
        </if>
        <if test="classId != null">
            and rp.class_id=#{classId}
        </if>
        order by up.sgname desc
        <include refid="com.jones.mars.repository.BaseMapper.endPage" />
    </select>

    <select id="findGrantedUserInfoAll" resultType="ProjectUser" parameterType="RolePermissionQuery">
        select distinct(ur.user_id) as userId, u.mobile, up.sgname, up.avatar, up.email,up.description, d.name as departmentName
        from user_role ur
        left join role_permission rp on ur.role_id=rp.role_id left join user_profile up on ur.user_id=up.user_id
        left join user u on u.id=ur.user_id
        left join department_user du on ur.user_id=du.user_id
        left join department d on du.department_id = d.id
        <if test="projectId != null">
          left join project p on p.class_id=rp.class_id
        </if>
        where rp.operation = #{operation}
        <if test="projectId != null">
            and p.id=#{projectId}
        </if>
        <if test="classId != null">
            and rp.class_id=#{classId}
        </if>
        order by up.sgname desc
    </select>

    <select id="findGrantedUserInfoCount" resultType="Integer" parameterType="RolePermissionQuery">
        select count(1)
        from user_role ur
        left join role_permission rp on ur.role_id=rp.role_id
        left join department_user du on ur.user_id=du.user_id
        <if test="projectId != null">
          left join project p on p.class_id=rp.class_id
        </if>
        where rp.operation = #{operation}
        <if test="projectId != null">
            and p.id=#{projectId}
        </if>
        <if test="classId != null">
            and rp.class_id=#{classId}
        </if>
    </select>

</mapper>