<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jones.mars.repository.DepartmentMapper" >
    <insert id="insert" parameterType="DepartmentParam" useGeneratedKeys="true" keyProperty="id">
        insert into department(`name`, `parent_id`, `manager_id`, `operator_id`, `enterprise_id`, `create_time`, `update_time`)
        values(#{name}, #{parentId}, #{managerId}, #{operatorId}, #{enterpriseId}, now(), now())
    </insert>
    <update id="update" parameterType="DepartmentParam">
        update department
        set name = #{name}
        <if test="enterpriseId != null">
            , enterprise_id = #{enterpriseId}
        </if>
        <if test="managerId != null">
            , manager_id = #{managerId}
        </if>
        <if test="parentId != null">
            , parent_id = #{parentId}
        </if>
        <if test="operatorId != null">
            , operator_id = #{operatorId}
        </if>
        ,update_time = now()
        where id=#{departmentId}
    </update>
    <resultMap id="DepartmentMap" type="Department" >
        <id column="id" property="id" />
        <result column="enterpirse_id" property="enterpriseId" />
        <result column="name" property="name" />
        <result column="manager_id" property="managerId" />
        <result column="parentName" property="parentName" />
        <result column="managerName" property="managerName" />
        <collection property="userList" ofType="departmentUser" column="department_id">
            <id column="departmentUserId" property="id"/>
            <result column="userId" property="userId"/>
            <result column="userSgname" property="userSgname"/>
        </collection>
    </resultMap>
    <select id="findList" resultMap="DepartmentMap" parameterType="Query">
        <include refid="com.jones.mars.repository.BaseMapper.startPage" />
        select d.id, d.enterprise_id, d.name, d.parent_id, d.manager_id,up1.sgname as managerName, p.name as parentName,du.id as departmentUserId, du.department_id, up2.user_id as userId, up2.sgname as userSgname
        from department d left join department p on d.parent_id = p.id left join user_profile up1 on d.manager_id=up1.user_id
          left join department_user du on du.department_id=d.id left join user_profile up2 on du.user_id=up2.user_id
        where d.delete_flg=0
        <if test="name != null and name !=''">
            and d.name like concat('%',#{name},'%')
        </if>
        <if test="enterpriseId != null">
            and d.enterprise_id=#{enterpriseId}
        </if>
        order by d.id desc
        <include refid="com.jones.mars.repository.BaseMapper.endPage" />
    </select>
    <select id="findCount" resultType="java.lang.Integer" parameterType="Query">
        select count(*) from department d
        where d.delete_flg=0
        <if test="name != null and name !=''">
            and d.name like concat('%',#{name},'%')
        </if>
        <if test="enterpriseId != null">
            and d.enterprise_id=#{enterpriseId}
        </if>
    </select>
    <select id="findAllName" resultType="java.lang.Object" parameterType="Query">
        select id, name from department d
        where delete_flg=0
        <if test="name != null and name !=''">
            and d.name like concat('%',#{name},'%')
        </if>
        <if test="enterpriseId != null">
            and d.enterprise_id=#{enterpriseId}
        </if>
        order by id desc
    </select>
    <select id="findAll" resultType="Department">
        select * from department where delete_flg=0 order by id desc
    </select>
    <select id="findOne" resultMap="DepartmentMap">
        select d.id, d.enterprise_id, d.name, d.parent_id, d.manager_id,up1.sgname as managerName, p.name as parentName,du.id as departmentUserId, du.department_id, up2.user_id as userId, up2.sgname as userSgname
        from department d left join department p on d.parent_id = p.id left join user_profile up1 on d.manager_id=up1.user_id
        left join department_user du on du.department_id=d.id left join user_profile up2 on du.user_id=up2.user_id
        where d.id=#{id}
    </select>
    <delete id="delete">
        delete from department where id=#{id};
    </delete>
</mapper>